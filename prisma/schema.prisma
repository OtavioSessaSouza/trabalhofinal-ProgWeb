// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// senha,
// e-mail

model Paciente {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  nome              String
  nascimento        DateTime
  cpf               String      @unique
  contato           String
  contatoEmergencia String
  respCasoMenor     String?
  prontuarioID      Int         @unique
  endereco          Endereco?
  prontuario        Avaliacao[]
  consulta          Consulta?
}

model Endereco {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  rua         String
  numero      Int
  complemento String
  bairro      String
  cidade      String
  estado      String
  pacienteID  String   @unique @db.ObjectId
  paciente    Paciente @relation(fields: [pacienteID], references: [id])
}

model Profissional {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  nome       String
  nascimento DateTime
  cpf        String     @unique
  crp        String     @unique
  Avaliacao  Avaliacao?
  consulta   Consulta?
}

model Avaliacao {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  profissionalID String       @unique @db.ObjectId
  profissional   Profissional @relation(fields: [profissionalID], references: [id])
  pacienteID     String       @unique @db.ObjectId
  paciente       Paciente     @relation(fields: [pacienteID], references: [id])
  data           DateTime
  status         Boolean
  condicao       String
  perguntas      QA[]
}

model QA {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  pergunta    String
  resposta    String
  Avaliacao   Avaliacao? @relation(fields: [avaliacaoId], references: [id])
  avaliacaoId String?    @unique @db.ObjectId
}

model Consulta {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  profissionalID String       @unique @db.ObjectId
  profissional   Profissional @relation(fields: [profissionalID], references: [id])
  pacienteID     String       @unique @db.ObjectId
  paciente       Paciente     @relation(fields: [pacienteID], references: [id])
  data           DateTime
  relatorio      String
}
